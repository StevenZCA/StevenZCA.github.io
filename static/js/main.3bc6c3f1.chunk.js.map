{"version":3,"sources":["puzzleModule.js","sudokuModule.js","boardComponentModule.js","gameComponentModule.js","reportWebVitals.js","index.js"],"names":["puzzles","createSquares","rows","cols","squares","i","length","j","push","member","item","list","digits","unitlist","c","r","rrows","ccols","rs","cs","units","s","u","peers","ul","s2","assign","values","sq","dig","result","vals","d","charAt","eliminate","indexOf","replace","dplaces","sq2","dup","obj","f","search","Object","keys","min","max","res","BoardComponent","props","state","Array","fill","join","this","renderBoardSetup","index","squareValues","value","from","isSolvedValue","split","shift","filledIndex","type","maxLength","className","getSquareClassName","onKeyPress","_onSquareInputPress","bind","onChange","_onSquareInputChange","id","evt","isInteractive","which","preventDefault","target","attributes","newValues","newValuesString","setState","Math","floor","random","onClick","reset","_onAutoPickClick","_renderPuzzlesList","_onUserInputChange","options","map","entry","name","_onPuzzleChange","userInput","document","querySelector","trim","setValues","rowEle","colEle","highlightBG","some","ele","displayRows","displayCols","_renderCell","controls","_renderControls","React","Component","GameComponent","solvedValues","style","_setValue","solve","boardSetup","infoLabelEle","every","classList","add","innerHTML","startTime","performance","now","solved","grid","grid2","parse_grid","endTime","remove","squareID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3bc6c3f1.chunk.js","sourcesContent":["export const puzzles = [\n    \"4.....8.5.3..........7......2.....6.....8.4......1.......6.3.7.5..2.....1.4......\",\n\t\"52...6.........7.13...........4..8..6......5...........418.........3..2...87.....\",\n\t\"6.....8.3.4.7.................5.4.7.3..2.....1.6.......2.....5.....8.6......1....\",\n\t\"48.3............71.2.......7.5....6....2..8.............1.76...3.....4......5....\",\n\t\"....14....3....2...7..........9...3.6.1.............8.2.....1.4....5.6.....7.8...\",\n\t\"......52..8.4......3...9...5.1...6..2..7........3.....6...1..........7.4.......3.\",\n\t\"6.2.5.........3.4..........43...8....1....2........7..5..27...........81...6.....\",\n\t\".524.........7.1..............8.2...3.....6...9.5.....1.6.3...........897........\",\n\t\"6.2.5.........4.3..........43...8....1....2........7..5..27...........81...6.....\",\n\t\".923.........8.1...........1.7.4...........658.........6.5.2...4.....7.....9.....\",\n\t\"6..3.2....5.....1..........7.26............543.........8.15........4.2........7..\",\n\t\".6.5.1.9.1...9..539....7....4.8...7.......5.8.817.5.3.....5.2............76..8...\",\n\t\"..5...987.4..5...1..7......2...48....9.1.....6..2.....3..6..2.......9.7.......5..\",\n\t\"3.6.7...........518.........1.4.5...7.....6.....2......2.....4.....8.3.....5.....\",\n\t\"1.....3.8.7.4..............2.3.1...........958.........5.6...7.....8.2...4.......\",\n\t\"6..3.2....4.....1..........7.26............543.........8.15........4.2........7..\",\n\t\"....3..9....2....1.5.9..............1.2.8.4.6.8.5...2..75......4.1..6..3.....4.6.\",\n\t\"45.....3....8.1....9...........5..9.2..7.....8.........1..4..........7.2...6..8..\",\n\t\".237....68...6.59.9.....7......4.97.3.7.96..2.........5..47.........2....8.......\",\n\t\"..84...3....3.....9....157479...8........7..514.....2...9.6...2.5....4......9..56\",\n\t\".98.1....2......6.............3.2.5..84.........6.........4.8.93..5...........1..\",\n\t\"..247..58..............1.4.....2...9528.9.4....9...1.........3.3....75..685..2...\",\n\t\"4.....8.5.3..........7......2.....6.....5.4......1.......6.3.7.5..2.....1.9......\",\n\t\".2.3......63.....58.......15....9.3....7........1....8.879..26......6.7...6..7..4\",\n\t\"1.....7.9.4...72..8.........7..1..6.3.......5.6..4..2.........8..53...7.7.2....46\",\n\t\"4.....3.....8.2......7........1...8734.......6........5...6........1.4...82......\",\n\t\".......71.2.8........4.3...7...6..5....2..3..9........6...7.....8....4......5....\",\n\t\"6..3.2....4.....8..........7.26............543.........8.15........8.2........7..\",\n\t\".47.8...1............6..7..6....357......5....1..6....28..4.....9.1...4.....2.69.\",\n\t\"......8.17..2........5.6......7...5..1....3...8.......5......2..4..8....6...3....\",\n\t\"38.6.......9.......2..3.51......5....3..1..6....4......17.5..8.......9.......7.32\",\n\t\"...5...........5.697.....2...48.2...25.1...3..8..3.........4.7..13.5..9..2...31..\",\n\t\".2.......3.5.62..9.68...3...5..........64.8.2..47..9....3.....1.....6...17.43....\",\n\t\".8..4....3......1........2...5...4.69..1..8..2...........3.9....6....5.....2.....\",\n\t\"..8.9.1...6.5...2......6....3.1.7.5.........9..4...3...5....2...7...3.8.2..7....4\",\n\t\"4.....5.8.3..........7......2.....6.....5.8......1.......6.3.7.5..2.....1.8......\",\n\t\"1.....3.8.6.4..............2.3.1...........958.........5.6...7.....8.2...4.......\",\n\t\"1....6.8..64..........4...7....9.6...7.4..5..5...7.1...5....32.3....8...4........\",\n\t\"249.6...3.3....2..8.......5.....6......2......1..4.82..9.5..7....4.....1.7...3...\",\n\t\"...8....9.873...4.6..7.......85..97...........43..75.......3....3...145.4....2..1\",\n\t\"...5.1....9....8...6.......4.1..........7..9........3.8.....1.5...2..4.....36....\",\n\t\"......8.16..2........7.5......6...2..1....3...8.......2......7..3..8....5...4....\",\n\t\".476...5.8.3.....2.....9......8.5..6...1.....6.24......78...51...6....4..9...4..7\",\n\t\".....7.95.....1...86..2.....2..73..85......6...3..49..3.5...41724................\",\n\t\".4.5.....8...9..3..76.2.....146..........9..7.....36....1..4.5..6......3..71..2..\",\n\t\".834.........7..5...........4.1.8..........27...3.....2.6.5....5.....8........1..\",\n\t\"..9.....3.....9...7.....5.6..65..4.....3......28......3..75.6..6...........12.3.8\",\n\t\".26.39......6....19.....7.......4..9.5....2....85.....3..2..9..4....762.........4\",\n\t\"2.3.8....8..7...........1...6.5.7...4......3....1............82.5....6...1.......\",\n\t\"6..3.2....1.....5..........7.26............843.........8.15........8.2........7..\",\n\t\"1.....9...64..1.7..7..4.......3.....3.89..5....7....2.....6.7.9.....4.1....129.3.\",\n\t\".........9......84.623...5....6...453...1...6...9...7....1.....4.5..2....3.8....9\",\n\t\".2....5938..5..46.94..6...8..2.3.....6..8.73.7..2.........4.38..7....6..........5\",\n\t\"9.4..5...25.6..1..31......8.7...9...4..26......147....7.......2...3..8.6.4.....9.\",\n\t\"...52.....9...3..4......7...1.....4..8..453..6...1...87.2........8....32.4..8..1.\",\n\t\"53..2.9...24.3..5...9..........1.827...7.........981.............64....91.2.5.43.\",\n\t\"1....786...7..8.1.8..2....9........24...1......9..5...6.8..........5.9.......93.4\",\n\t\"....5...11......7..6.....8......4.....9.1.3.....596.2..8..62..7..7......3.5.7.2..\",\n\t\".47.2....8....1....3....9.2.....5...6..81..5.....4.....7....3.4...9...1.4..27.8..\",\n\t\"......94.....9...53....5.7..8.4..1..463...........7.8.8..7.....7......28.5.26....\",\n\t\".2......6....41.....78....1......7....37.....6..412....1..74..5..8.5..7......39..\",\n\t\"1.....3.8.6.4..............2.3.1...........758.........7.5...6.....8.2...4.......\",\n\t\"2....1.9..1..3.7..9..8...2.......85..6.4.........7...3.2.3...6....5.....1.9...2.5\",\n\t\"..7..8.....6.2.3...3......9.1..5..6.....1.....7.9....2........4.83..4...26....51.\",\n\t\"...36....85.......9.4..8........68.........17..9..45...1.5...6.4....9..2.....3...\",\n\t\"34.6.......7.......2..8.57......5....7..1..2....4......36.2..1.......9.......7.82\",\n\t\"......4.18..2........6.7......8...6..4....3...1.......6......2..5..1....7...3....\",\n\t\".4..5..67...1...4....2.....1..8..3........2...6...........4..5.3.....8..2........\",\n\t\".......4...2..4..1.7..5..9...3..7....4..6....6..1..8...2....1..85.9...6.....8...3\",\n\t\"8..7....4.5....6............3.97...8....43..5....2.9....6......2...6...7.71..83.2\",\n\t\".8...4.5....7..3............1..85...6.....2......4....3.26............417........\",\n\t\"....7..8...6...5...2...3.61.1...7..2..8..534.2..9.......2......58...6.3.4...1....\",\n\t\"......8.16..2........7.5......6...2..1....3...8.......2......7..4..8....5...3....\",\n\t\".2..........6....3.74.8.........3..2.8..4..1.6..5.........1.78.5....9..........4.\",\n\t\".52..68.......7.2.......6....48..9..2..41......1.....8..61..38.....9...63..6..1.9\",\n\t\"....1.78.5....9..........4..2..........6....3.74.8.........3..2.8..4..1.6..5.....\",\n\t\"1.......3.6.3..7...7...5..121.7...9...7........8.1..2....8.64....9.2..6....4.....\",\n\t\"4...7.1....19.46.5.....1......7....2..2.3....847..6....14...8.6.2....3..6...9....\",\n\t\"......8.17..2........5.6......7...5..1....3...8.......5......2..3..8....6...4....\",\n\t\"963......1....8......2.5....4.8......1....7......3..257......3...9.2.4.7......9..\",\n\t\"15.3......7..4.2....4.72.....8.........9..1.8.1..8.79......38...........6....7423\",\n\t\"..........5724...98....947...9..3...5..9..12...3.1.9...6....25....56.....7......6\",\n\t\"....75....1..2.....4...3...5.....3.2...8...1.......6.....1..48.2........7........\",\n\t\"6.....7.3.4.8.................5.4.8.7..2.....1.3.......2.....5.....7.9......1....\",\n\t\"....6...4..6.3....1..4..5.77.....8.5...8.....6.8....9...2.9....4....32....97..1..\",\n\t\".32.....58..3.....9.428...1...4...39...6...5.....1.....2...67.8.....4....95....6.\",\n\t\"...5.3.......6.7..5.8....1636..2.......4.1.......3...567....2.8..4.7.......2..5..\",\n\t\".5.3.7.4.1.........3.......5.8.3.61....8..5.9.6..1........4...6...6927....2...9..\",\n\t\"..5..8..18......9.......78....4.....64....9......53..2.6.........138..5....9.714.\",\n\t\"..........72.6.1....51...82.8...13..4.........37.9..1.....238..5.4..9.........79.\",\n\t\"...658.....4......12............96.7...3..5....2.8...3..19..8..3.6.....4....473..\",\n\t\".2.3.......6..8.9.83.5........2...8.7.9..5........6..4.......1...1...4.22..7..8.9\",\n\t\".5..9....1.....6.....3.8.....8.4...9514.......3....2..........4.8...6..77..15..6.\",\n\t\".....2.......7...17..3...9.8..7......2.89.6...13..6....9..5.824.....891..........\",\n\t\"3...8.......7....51..............36...2..4....7...........6.13..452...........8..\"];","\n    //var test_grid1 = \"003020600900305001001806400008102900700000008006708200002609500800203009005010300\";\n    //var test_grid2 = \"4.....8.5.3..........7......2.....6.....8.4......1.......6.3.7.5..2.....1.4......\";\n    \n    export function createSquares(rows, cols){\n      const squares = [];\n      for (let i =0; i < rows.length; i++ ) {\n        for (let j =0; j < cols.length; j++ ) {\n          squares.push(rows[i] + cols[j]);\n        }\n      }\n      return squares;\n    }\n    \n    function member(item, list){\n      for (var i in list)\n        if (item == list[i]) return true;\n      return false;\n    }\n    \n    export let rows = ['A','B','C','D','E','F','G','H','I'];\n    export let cols = ['1','2','3','4','5','6','7','8','9'];\n\n    var digits = \"123456789\";\n    var squares = createSquares(rows, cols);\n    var nassigns = 0;\n    var neliminations = 0;\n    var nsearches = 0;\n    \n    var unitlist = [];\n    for (var c in cols) \n      unitlist.push(createSquares(rows, [cols[c]]));\n    for (var r in rows) \n      unitlist.push(createSquares([rows[r]], cols));\n    var rrows = [['A','B','C'], ['D','E','F'], ['G','H','I']];\n    var ccols = [['1','2','3'], ['4','5','6'], ['7','8','9']];\n    for (var rs in rrows) \n      for (var cs in ccols) \n        unitlist.push(createSquares(rrows[rs], ccols[cs]));\n    \n    var units = {};\n    for (var s in squares){\n      units[squares[s]] = [];\n      for (var u in unitlist)\n        if (member(squares[s], unitlist[u]))\n          units[squares[s]].push(unitlist[u]);\n    }\n    \n    var peers = {};\n    for (var s in squares){\n      peers[squares[s]] = {};\n      for (var u in units[squares[s]]){\n        var ul = units[squares[s]][u];\n        for (var s2 in ul)\n          if (ul[s2] != squares[s])\n            peers[squares[s]][ul[s2]] = true;\n      }\n    }\n    \n    export function parse_grid(grid){\n      if(!grid || grid.trim().length ===0 ){\n        return {};\n      }\n      nassigns = 0;\n      neliminations = 0;\n      nsearches = 0;\n      var grid2 = \"\";\n      for (var c = 0; c < grid.length; c++)\n        if (\"0.-123456789\".indexOf(grid.charAt(c)) >= 0)\n          grid2 += grid.charAt(c);\n      var values = {};\n      for (var s in squares)\n        values[squares[s]] = digits;\n      for (var s in squares)\n        if (digits.indexOf(grid2.charAt(s)) >= 0 && !assign(values, squares[s], grid2.charAt(s)))\n          return false;\n      return values;\n    }\n    \n    function assign(values, sq, dig){ // Eliminate all the other values (except dig) from values[sq] and propagate.\n      ++nassigns;\n      var result = true;\n      var vals = values[sq];\n      for (var d = 0; d < vals.length; d++)\n        if (vals.charAt(d) != dig)\n          result &= (eliminate(values, sq, vals.charAt(d)) ? true : false);\n      return (result ? values : false);\n    }\n    \n    function eliminate(values, sq, dig){\n      ++neliminations;\n      if (values[sq].indexOf(dig) == -1)  // already eliminated.\n        return values;\n      values[sq] = values[sq].replace(dig, \"\");\n      if (values[sq].length == 0) // invalid input ?\n        return false;\n      else if (values[sq].length == 1){ // If there is only one value (values[sq]) left in square, remove it from peers\n        var result = true;\n        for (var s in peers[sq])\n          result &= (eliminate(values, s, values[sq]) ? true : false);\n        if (!result) return false;\n      }\n      for (var u in units[sq]){\n        var dplaces = [];\n        for (var s in units[sq][u]){\n          var sq2 = units[sq][u][s];\n          if (values[sq2].indexOf(dig) != -1) \n            dplaces.push(sq2);\n        }\n        if (dplaces.length == 0)\n          return false;\n        else if (dplaces.length == 1)\n          if (!assign(values, dplaces[0], dig))\n            return false;\n      }\n      return values;\n    }\n    \n    function dup(obj){\n      var d = {};\n      for (var f in obj)\n        d[f] = obj[f];\n      return d;\n    }\n    \n    export function search(values){\n      ++nsearches;\n      if (!values){\n        return false;\n      }else if(Object.keys(values).length === 0){\n        return false;\n      }\n \n      var min = 10, max = 1, sq = null;\n      for (var s in squares){\n        if (values[squares[s]].length > max)\n          max = values[squares[s]].length;\n        if (values[squares[s]].length > 1 && values[squares[s]].length < min){\n          min = values[squares[s]].length;\n          sq = squares[s];\n        }\n      }\n    \n      if (max == 1)\n        return values;\n      for (var d = 0; d < values[sq].length; d++){\n        var res = search(assign(dup(values), sq, values[sq].charAt(d)));\n        if (res)\n          return res;\n      }\n      return false;\n    }\n    \n    function center(s, w){\n      var excess = w - s.length;\n      while (excess > 0){\n        if (excess%2) s += \" \"; else s = \" \" + s;\n        excess -= 1;\n      }\n      return s;\n    }\n      \n    function board_string(values){ // Used for debugging\n      var width = 0;\n      console.log(squares.toString()+ \" test!\");\n      console.log(values.toString()+ \" test!\");\n      for (var s in squares)\n        if (values[squares[s]].length > width)\n          width = values[squares[s]].length;\n      width += 1;\n      var seg = \"\";\n      for (var i = 0; i < width; i++) seg += \"---\";\n      var line = \"\\n\" + [seg, seg, seg].join(\"+\");\n      var board = \"\";\n      for (var r in rows){\n        for (var c in cols){\n          board += center(values[rows[r] + cols[c]], width);\n          if (c == 2 || c == 5) board += \"|\";\n        }\n        if (r == 2 || r == 5) board += line;\n        board += \"\\n\";\n      }\n      board += \"\\n\";\n      return board;\n    }    \n\n","/**\n *@author StevenZCA\n *Date April 18th 2021\n *Description:\n *A reusable React component that renders an interactive or read only mode sudoku board   \n */\n import React from 'react';\n import {rows, cols} from './sudokuModule.js';\n import { puzzles } from './puzzleModule.js'\n \n export default class BoardComponent extends React.Component {\n    /**\n     * state.values holds the collection of values for each square\n     * state.filledIndex holds the collection of indices for squares to be solved\n     */\n    constructor(props) {\n        super(props);\n        //initial state.values is an array of 81 '.'s\n        this.state = {\n            values: new Array(81).fill('.').join('')\n        };\n    }\n\n    render() {\n        return this.renderBoardSetup();\n    }\n\n    _renderCell(i, j, index, squareValues) {\n        let value = Array.from(squareValues)[index];\n        let isSolvedValue = false;\n        if (value) {\n            value = value.split('').shift();\n        }\n        if (this.props.filledIndex && this.props.filledIndex.indexOf(index) !== -1) {\n            isSolvedValue = true;\n        }\n        return (\n            <div key={`${rows[i]}${cols[j]}`}>\n                <input\n                    type=\"text\"\n                    maxLength=\"1\"\n                    className={this.getSquareClassName(rows[i], cols[j], isSolvedValue)}\n                    value={value && value !== '.' ? value : ''}\n                    onKeyPress={this._onSquareInputPress.bind(this)}\n                    onChange={this._onSquareInputChange.bind(this)}\n                    index={index}\n                    id={`${rows[i]}${cols[j]}`}\n                />\n            </div>\n        );\n    }\n\n    /*\n     * Only accepts key press event that for key '1' to key '9'\n     */\n    _onSquareInputPress(evt) {\n        if (!this.props.isInteractive || evt.which != 8 && evt.which != 0 && (evt.which < 49 || evt.which > 57)) {\n            evt.preventDefault();//only Allow 1 to 9\n        }\n    }\n\n    /*\n     * Update React State this.state.values when a number is input on any square\n     */\n    _onSquareInputChange(evt) {\n        const index = evt.target.attributes.index.value;\n        const newValues = Array.from(this.state.values);\n        newValues[index] = evt.target.value === '' ? '.' : evt.target.value;\n        const newValuesString = newValues.join('');\n        this.setState({ values: newValuesString });\n    }\n\n\n    _onAutoPickClick() {\n        const index = (Math.floor(Math.random() * puzzles.length) % puzzles.length);\n        this.setState({\n            values: puzzles[index]\n        });\n        this.setState({\n            filledIndex: []\n        });\n    }\n\n    _renderControls() {\n        return (\n            <div className=\"board__controls\">\n                <section>\n                        <input\n                            className=\"board__controls__inputButton board__controls__inputButton--solve\"\n                            id=\"sudokuResetBtn\"\n                            type=\"button\"\n                            value=\"Reset\"\n                            onClick={this.reset.bind(this)}\n                        />\n                </section>\n                <section className=\"autoPick\">\n                    <label>\n                        Method 1:\n                    </label>\n                    <div>\n                        <input className=\"board__controls__inputButton\"\n                            type=\"button\"\n                            value=\"Pick a random puzzle\"\n                            onClick={this._onAutoPickClick.bind(this)} />\n                    </div>\n                </section>\n                <section>\n                    <label>Method 2: Select a puzzle\n                  </label>\n                    {this._renderPuzzlesList(puzzles)}\n                </section>\n                <section>\n                    <label>Method 3: input your own\n                  </label>\n                    <textarea\n                        className=\"board__controls__userInput\"\n                        onChange={this._onUserInputChange.bind(this)}\n                    />\n                </section>\n                <section>\n                    <label\n                        className=\"board_controls__infoLabel\"\n                    >Performance benchmark: </label>\n                    <div className=\"performanceBenchmark\"></div>\n                </section>\n            </div>\n        )\n    }\n\n    _renderPuzzlesList(puzzles) {\n        let index = 0;\n        const options = puzzles.map((entry) => {\n            index++;\n            return (<option value={entry} key={index}>{entry}</option>);\n        })\n        return (\n            <select \n                name=\"Select a puzzle from the list\" \n                id=\"puzzles\" \n                onChange={this._onPuzzleChange.bind(this)}\n            >\n                {[...[<option value={null} key={index+1}>None</option>], ...options]}\n            </select>\n        )\n    }\n\n    _onPuzzleChange(evt){\n        if(evt.target.value && evt.target.value!=='None'){\n            this.setState({'values' : evt.target.value});\n        }else{\n            this.reset();\n        }\n    }\n\n    _loadFromInput() {\n        const userInput = document.querySelector('.board__controls__userInput').value;\n        if (userInput.trim().length > 0) {\n            this.setState({ values: userInput });\n        }\n    }\n\n    _onUserInputChange(evt) {\n        const userInput = evt.target.value;\n        this.setState({ values: userInput });\n    }\n\n    componentDidUpdate() {\n        if (this.props.setValues) {\n            this.props.setValues(this.state.values);\n        }\n    }\n\n    /**\n     * @description \n     * Highlight 3x3 square for best user experience\n     * \n     */\n    getSquareClassName(rowEle, colEle, isSolvedValue) {\n        const squares = [];\n        squares.push({\n            rows: ['A', 'B', 'C'],\n            cols: ['1', '2', '3']\n        });\n        squares.push({\n            rows: ['A', 'B', 'C'],\n            cols: ['7', '8', '9']\n        });\n        squares.push({\n            rows: ['D', 'E', 'F'],\n            cols: ['4', '5', '6']\n        });\n        squares.push({\n            rows: ['G', 'H', 'I'],\n            cols: ['1', '2', '3']\n        });\n        squares.push({\n            rows: ['G', 'H', 'I'],\n            cols: ['7', '8', '9']\n        });\n        let highlightBG = '';\n        if (squares.some(ele => (ele.rows.indexOf(rowEle) >= 0 && ele.cols.indexOf(colEle) >= 0))) {\n            highlightBG = ' board__squareRows__square--highlighted'\n        }\n        if (isSolvedValue) {\n            highlightBG = highlightBG + ' board__squareRows__square--solvedValue'\n        }\n        return `board__squareRows__square${highlightBG}`;\n    }\n\n    /**\n     * @description \n     * Create the JSX markups for all 9x9 squares.\n     * Each square contains an HTML input with a unique ID.\n     * \n     * The ID is composed by an element from Rows below and an element from the \n     * cols below. For instance 'A1' OR 'H8' etc.\n     * \n     * rows = ['A','B','C','D','E','F','G','H','I'];\n     * cols = ['1','2','3','4','5','6','7','8','9'];\n     * \n     * @return JSX that represent  all 9x9 squares \n     */\n    renderBoardSetup() {\n        if (this.props.values && this.props.values.length === 0) {\n            return null;\n        }\n        const displayRows = [];\n        let index = 0;\n        for (let i = 0; i < rows.length; i++) {\n            const displayCols = [];\n            for (let j = 0; j < cols.length; j++) {\n                displayCols.push(this._renderCell(i, j, index, this.props.values || this.state.values));\n                index++;\n            }\n            displayRows.push(\n                <div key={i} className=\"board__squareRows\">\n                    {displayCols}\n                </div>\n            );\n        }\n        let controls = null;\n        if (this.props.isInteractive === true) {\n            controls = this._renderControls();\n        }\n        return (\n            <div className=\"board\">\n                <div>\n                    {displayRows}\n                </div>\n                {controls}\n            </div>\n        );\n    }\n\n    reset(){\n        this.setState({values: new Array(81).fill('.').join('')})\n    }\n}","\n\n/**\n *@author StevenZCA\n *@description\n *Date April 18th 2021\n *Description:\n *A React component the works as a container component of two BoardComponent\n *that demonstrates the sudoku solver\n */\n\nimport {puzzles} from './puzzleModule';\nimport React from 'react';\n\nimport {search, parse_grid, rows, cols} from './sudokuModule';\nimport BoardComponent from './boardComponentModule';\n\nexport default class GameComponent extends React.Component {\n    /**\n     * state.values holds the collection of values for each square\n     * state.filledIndex holds the collection of indices for squares to be solved\n     */\n    constructor(props) {\n        super(props);\n        //initial state.values is an array of 81 '.'s\n        this.state = {\n            values: new Array(81).fill('.').join(''),\n            filledIndex: [],\n            solvedValues: []\n        };\n    }\n\n    render() {\n        return (\n            <div style={{ \"display\": \"flex\", \"flexDirection\": \"row\" }} >\n                <BoardComponent isInteractive={true} setValues={this._setValue.bind(this)} />\n                <div>\n                    <section>\n                        <input\n                            className=\"board__controls__inputButton board__controls__inputButton--solve\"\n                            id=\"sudokuSolveBtn\"\n                            type=\"button\"\n                            value=\"Solve it!\"\n                            onClick={this.solve.bind(this)}\n                        />\n                    </section>\n                </div>\n                <BoardComponent values={this.state.solvedValues} filledIndex={this.state.filledIndex} />\n            </div>\n        )\n    }\n\n    _setValue(values) {\n        this.boardSetup = values;\n    }\n\n    solve() {\n        const infoLabelEle = document.querySelector('.board_controls__infoLabel');\n        if (!this.boardSetup || this.boardSetup.trim().length === 0 || this.boardSetup.split('').every(ele=>ele === '.')) {\n            infoLabelEle.classList.add('board_controls__infoLabel--warning');\n            infoLabelEle.innerHTML = 'Please set up the initial board.';\n            return;\n        }\n        const startTime = performance.now();\n        const solved = search(parse_grid(this.boardSetup));\n        const endTime = performance.now();\n        if (!solved) {\n            infoLabelEle.classList.add('board_controls__infoLabel--warning');\n            infoLabelEle.innerHTML = 'No solution found! It might be due to invalid input';\n            return;\n        } else {\n            infoLabelEle.classList.remove('board_controls__infoLabel--warning');\n            infoLabelEle.innerHTML = `Time used ${endTime - startTime} ms`;\n            let index = 0;\n            const values = [];\n            const filledIndex = [];\n            for (const squareID in solved) {\n                if (this.boardSetup.split('')[index] === '.') {\n                    filledIndex.push(index);\n                }\n                values[index] = solved[squareID];\n                index++;\n            }\n            this.setState({ solvedValues: values.join('') });\n            this.setState({ filledIndex: filledIndex });\n        };\n    }\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sudoku.css';\nimport GameComponent from './gameComponentModule';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GameComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}